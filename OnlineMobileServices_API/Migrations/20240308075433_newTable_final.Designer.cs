// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineMobileServices_API.Models;

#nullable disable

namespace OnlineMobileServices_API.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240308075433_newTable_final")]
    partial class newTable_final
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnlineMobileServices_Models.Models.CallerTunesHistory", b =>
                {
                    b.Property<int>("HistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryID"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("OriginalPackagePackageID")
                        .HasColumnType("int");

                    b.Property<int>("PackageID")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("HistoryID");

                    b.HasIndex("OriginalPackagePackageID");

                    b.HasIndex("PackageID");

                    b.HasIndex("UserID");

                    b.ToTable("CallerTunesHistories");
                });

            modelBuilder.Entity("OnlineMobileServices_Models.Models.CallerTunesPackage", b =>
                {
                    b.Property<int>("PackageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PackageID"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Validity")
                        .HasColumnType("int");

                    b.HasKey("PackageID");

                    b.ToTable("CallerTunesPackages");
                });

            modelBuilder.Entity("OnlineMobileServices_Models.Models.DoNotDisturbHistory", b =>
                {
                    b.Property<int>("HistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryID"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("HistoryID");

                    b.HasIndex("UserID");

                    b.ToTable("DoNotDisturbHistories");
                });

            modelBuilder.Entity("OnlineMobileServices_Models.Models.PostPaidHistory", b =>
                {
                    b.Property<int>("HistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryID"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EnterBillID")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("HistoryID");

                    b.HasIndex("UserID");

                    b.ToTable("PostPaidHistories");
                });

            modelBuilder.Entity("OnlineMobileServices_Models.Models.RechargeHistory", b =>
                {
                    b.Property<int>("HistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryID"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("PackageID")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("HistoryID");

                    b.HasIndex("PackageID");

                    b.HasIndex("UserID");

                    b.ToTable("RechargeHistory", (string)null);
                });

            modelBuilder.Entity("OnlineMobileServices_Models.Models.RechargePackage", b =>
                {
                    b.Property<int>("RechargePackageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RechargePackageID"));

                    b.Property<double>("DataVolume")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("SMS")
                        .HasColumnType("int");

                    b.Property<string>("SubscriptionCode")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int>("TelcoID")
                        .HasColumnType("int");

                    b.Property<double>("Validity")
                        .HasColumnType("float");

                    b.Property<double>("VoiceCall")
                        .HasColumnType("float");

                    b.HasKey("RechargePackageID");

                    b.HasIndex("TelcoID");

                    b.ToTable("RechargePackages");
                });

            modelBuilder.Entity("OnlineMobileServices_Models.Models.ServiceHistory", b =>
                {
                    b.Property<int>("ServiceHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceHistoryID"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("ServiceDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ServiceID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ServiceHistoryID");

                    b.HasIndex("ServiceID");

                    b.HasIndex("UserID");

                    b.ToTable("ServiceHistories");
                });

            modelBuilder.Entity("OnlineMobileServices_Models.Models.Services", b =>
                {
                    b.Property<int>("ServiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceID"));

                    b.Property<string>("Description")
                        .HasColumnType("varchar(512)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("ServiceID");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("OnlineMobileServices_Models.Models.SpecialRechargeHistory", b =>
                {
                    b.Property<int>("HistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryID"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("PackageID")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("RechargePackageID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("HistoryID");

                    b.HasIndex("PackageID");

                    b.HasIndex("UserID");

                    b.ToTable("SpecialRechargeHistory", (string)null);
                });

            modelBuilder.Entity("OnlineMobileServices_Models.Models.SpecialRechargePackage", b =>
                {
                    b.Property<int>("SpecialRechargePackageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpecialRechargePackageID"));

                    b.Property<double>("DataVolume")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("SMS")
                        .HasColumnType("int");

                    b.Property<string>("SpecialPackageName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SubscriptionCode")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int>("TelcoID")
                        .HasColumnType("int");

                    b.Property<double>("Validity")
                        .HasColumnType("float");

                    b.Property<double>("VoiceCall")
                        .HasColumnType("float");

                    b.HasKey("SpecialRechargePackageID");

                    b.HasIndex("TelcoID");

                    b.ToTable("SpecialRechargePackages");
                });

            modelBuilder.Entity("OnlineMobileServices_Models.Models.Telco", b =>
                {
                    b.Property<int>("TelcoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TelcoID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<string>("TelcoName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("TelcoID");

                    b.ToTable("Telcos");
                });

            modelBuilder.Entity("OnlineMobileServices_Models.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .HasColumnType("varchar(20)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OnlineMobileServices_Models.Models.WebsiteSettings", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime?>("LastEditDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastEditedByID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("LastEditedByID");

                    b.ToTable("WebsiteSettings");
                });

            modelBuilder.Entity("OnlineMobileServices_Models.Models.CallerTunesHistory", b =>
                {
                    b.HasOne("OnlineMobileServices_Models.Models.CallerTunesPackage", "OriginalPackage")
                        .WithMany()
                        .HasForeignKey("OriginalPackagePackageID");

                    b.HasOne("OnlineMobileServices_Models.Models.CallerTunesPackage", "CallerTunesPackage")
                        .WithMany("CallerTunesHistories")
                        .HasForeignKey("PackageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineMobileServices_Models.Models.User", "User")
                        .WithMany("CallerTunesHistories")
                        .HasForeignKey("UserID");

                    b.Navigation("CallerTunesPackage");

                    b.Navigation("OriginalPackage");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineMobileServices_Models.Models.DoNotDisturbHistory", b =>
                {
                    b.HasOne("OnlineMobileServices_Models.Models.User", "User")
                        .WithMany("DoNotDisturbHistories")
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineMobileServices_Models.Models.PostPaidHistory", b =>
                {
                    b.HasOne("OnlineMobileServices_Models.Models.User", "User")
                        .WithMany("PostPaidHistories")
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineMobileServices_Models.Models.RechargeHistory", b =>
                {
                    b.HasOne("OnlineMobileServices_Models.Models.RechargePackage", "OriginalPackage")
                        .WithMany("RechargePackageHistories")
                        .HasForeignKey("PackageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineMobileServices_Models.Models.User", "User")
                        .WithMany("RechargePackageHistories")
                        .HasForeignKey("UserID");

                    b.Navigation("OriginalPackage");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineMobileServices_Models.Models.RechargePackage", b =>
                {
                    b.HasOne("OnlineMobileServices_Models.Models.Telco", "Telco")
                        .WithMany("RechargePackages")
                        .HasForeignKey("TelcoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Telco");
                });

            modelBuilder.Entity("OnlineMobileServices_Models.Models.ServiceHistory", b =>
                {
                    b.HasOne("OnlineMobileServices_Models.Models.Services", "Service")
                        .WithMany("ServiceHistories")
                        .HasForeignKey("ServiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineMobileServices_Models.Models.User", "User")
                        .WithMany("ServiceHistories")
                        .HasForeignKey("UserID");

                    b.Navigation("Service");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineMobileServices_Models.Models.SpecialRechargeHistory", b =>
                {
                    b.HasOne("OnlineMobileServices_Models.Models.SpecialRechargePackage", "OriginalPackage")
                        .WithMany("SpecialRechargePackageHistories")
                        .HasForeignKey("PackageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineMobileServices_Models.Models.User", "User")
                        .WithMany("SpecialRechargePackageHistories")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OriginalPackage");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OnlineMobileServices_Models.Models.SpecialRechargePackage", b =>
                {
                    b.HasOne("OnlineMobileServices_Models.Models.Telco", "Telco")
                        .WithMany("SpecialRechargePackages")
                        .HasForeignKey("TelcoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Telco");
                });

            modelBuilder.Entity("OnlineMobileServices_Models.Models.WebsiteSettings", b =>
                {
                    b.HasOne("OnlineMobileServices_Models.Models.User", "LastEditedBy")
                        .WithMany("WebsiteSettings")
                        .HasForeignKey("LastEditedByID");

                    b.Navigation("LastEditedBy");
                });

            modelBuilder.Entity("OnlineMobileServices_Models.Models.CallerTunesPackage", b =>
                {
                    b.Navigation("CallerTunesHistories");
                });

            modelBuilder.Entity("OnlineMobileServices_Models.Models.RechargePackage", b =>
                {
                    b.Navigation("RechargePackageHistories");
                });

            modelBuilder.Entity("OnlineMobileServices_Models.Models.Services", b =>
                {
                    b.Navigation("ServiceHistories");
                });

            modelBuilder.Entity("OnlineMobileServices_Models.Models.SpecialRechargePackage", b =>
                {
                    b.Navigation("SpecialRechargePackageHistories");
                });

            modelBuilder.Entity("OnlineMobileServices_Models.Models.Telco", b =>
                {
                    b.Navigation("RechargePackages");

                    b.Navigation("SpecialRechargePackages");
                });

            modelBuilder.Entity("OnlineMobileServices_Models.Models.User", b =>
                {
                    b.Navigation("CallerTunesHistories");

                    b.Navigation("DoNotDisturbHistories");

                    b.Navigation("PostPaidHistories");

                    b.Navigation("RechargePackageHistories");

                    b.Navigation("ServiceHistories");

                    b.Navigation("SpecialRechargePackageHistories");

                    b.Navigation("WebsiteSettings");
                });
#pragma warning restore 612, 618
        }
    }
}
